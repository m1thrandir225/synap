/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardNotesImport } from './routes/dashboard/notes'
import { Route as DashboardFilesImport } from './routes/dashboard/files'
import { Route as DashboardCoursesImport } from './routes/dashboard/courses'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as DashboardNotesIndexImport } from './routes/dashboard/notes/index'
import { Route as DashboardFilesIndexImport } from './routes/dashboard/files/index'
import { Route as DashboardCoursesIndexImport } from './routes/dashboard/courses/index'
import { Route as DashboardNotesNewImport } from './routes/dashboard/notes/new'
import { Route as DashboardNotesNoteIdImport } from './routes/dashboard/notes/$noteId'
import { Route as DashboardLecturesSummarizationIdImport } from './routes/dashboard/lectures/$summarizationId'
import { Route as DashboardCoursesNewImport } from './routes/dashboard/courses/new'
import { Route as DashboardCoursesCourseIdImport } from './routes/dashboard/courses/$courseId'
import { Route as DashboardNotesNoteIdIndexImport } from './routes/dashboard/notes/$noteId/index'
import { Route as DashboardCoursesCourseIdIndexImport } from './routes/dashboard/courses/$courseId/index'
import { Route as DashboardNotesNoteIdEditImport } from './routes/dashboard/notes/$noteId/edit'
import { Route as DashboardCoursesCourseIdUploadImport } from './routes/dashboard/courses/$courseId/upload'
import { Route as DashboardCoursesCourseIdEditImport } from './routes/dashboard/courses/$courseId/edit'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardNotesRoute = DashboardNotesImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardFilesRoute = DashboardFilesImport.update({
  id: '/files',
  path: '/files',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCoursesRoute = DashboardCoursesImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => DashboardRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardNotesIndexRoute = DashboardNotesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardNotesRoute,
} as any)

const DashboardFilesIndexRoute = DashboardFilesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardFilesRoute,
} as any)

const DashboardCoursesIndexRoute = DashboardCoursesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardCoursesRoute,
} as any)

const DashboardNotesNewRoute = DashboardNotesNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => DashboardNotesRoute,
} as any)

const DashboardNotesNoteIdRoute = DashboardNotesNoteIdImport.update({
  id: '/$noteId',
  path: '/$noteId',
  getParentRoute: () => DashboardNotesRoute,
} as any)

const DashboardLecturesSummarizationIdRoute =
  DashboardLecturesSummarizationIdImport.update({
    id: '/lectures/$summarizationId',
    path: '/lectures/$summarizationId',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardCoursesNewRoute = DashboardCoursesNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => DashboardCoursesRoute,
} as any)

const DashboardCoursesCourseIdRoute = DashboardCoursesCourseIdImport.update({
  id: '/$courseId',
  path: '/$courseId',
  getParentRoute: () => DashboardCoursesRoute,
} as any)

const DashboardNotesNoteIdIndexRoute = DashboardNotesNoteIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardNotesNoteIdRoute,
} as any)

const DashboardCoursesCourseIdIndexRoute =
  DashboardCoursesCourseIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardCoursesCourseIdRoute,
  } as any)

const DashboardNotesNoteIdEditRoute = DashboardNotesNoteIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => DashboardNotesNoteIdRoute,
} as any)

const DashboardCoursesCourseIdUploadRoute =
  DashboardCoursesCourseIdUploadImport.update({
    id: '/upload',
    path: '/upload',
    getParentRoute: () => DashboardCoursesCourseIdRoute,
  } as any)

const DashboardCoursesCourseIdEditRoute =
  DashboardCoursesCourseIdEditImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => DashboardCoursesCourseIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/courses': {
      id: '/dashboard/courses'
      path: '/courses'
      fullPath: '/dashboard/courses'
      preLoaderRoute: typeof DashboardCoursesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/files': {
      id: '/dashboard/files'
      path: '/files'
      fullPath: '/dashboard/files'
      preLoaderRoute: typeof DashboardFilesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/notes': {
      id: '/dashboard/notes'
      path: '/notes'
      fullPath: '/dashboard/notes'
      preLoaderRoute: typeof DashboardNotesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/courses/$courseId': {
      id: '/dashboard/courses/$courseId'
      path: '/$courseId'
      fullPath: '/dashboard/courses/$courseId'
      preLoaderRoute: typeof DashboardCoursesCourseIdImport
      parentRoute: typeof DashboardCoursesImport
    }
    '/dashboard/courses/new': {
      id: '/dashboard/courses/new'
      path: '/new'
      fullPath: '/dashboard/courses/new'
      preLoaderRoute: typeof DashboardCoursesNewImport
      parentRoute: typeof DashboardCoursesImport
    }
    '/dashboard/lectures/$summarizationId': {
      id: '/dashboard/lectures/$summarizationId'
      path: '/lectures/$summarizationId'
      fullPath: '/dashboard/lectures/$summarizationId'
      preLoaderRoute: typeof DashboardLecturesSummarizationIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/notes/$noteId': {
      id: '/dashboard/notes/$noteId'
      path: '/$noteId'
      fullPath: '/dashboard/notes/$noteId'
      preLoaderRoute: typeof DashboardNotesNoteIdImport
      parentRoute: typeof DashboardNotesImport
    }
    '/dashboard/notes/new': {
      id: '/dashboard/notes/new'
      path: '/new'
      fullPath: '/dashboard/notes/new'
      preLoaderRoute: typeof DashboardNotesNewImport
      parentRoute: typeof DashboardNotesImport
    }
    '/dashboard/courses/': {
      id: '/dashboard/courses/'
      path: '/'
      fullPath: '/dashboard/courses/'
      preLoaderRoute: typeof DashboardCoursesIndexImport
      parentRoute: typeof DashboardCoursesImport
    }
    '/dashboard/files/': {
      id: '/dashboard/files/'
      path: '/'
      fullPath: '/dashboard/files/'
      preLoaderRoute: typeof DashboardFilesIndexImport
      parentRoute: typeof DashboardFilesImport
    }
    '/dashboard/notes/': {
      id: '/dashboard/notes/'
      path: '/'
      fullPath: '/dashboard/notes/'
      preLoaderRoute: typeof DashboardNotesIndexImport
      parentRoute: typeof DashboardNotesImport
    }
    '/dashboard/courses/$courseId/edit': {
      id: '/dashboard/courses/$courseId/edit'
      path: '/edit'
      fullPath: '/dashboard/courses/$courseId/edit'
      preLoaderRoute: typeof DashboardCoursesCourseIdEditImport
      parentRoute: typeof DashboardCoursesCourseIdImport
    }
    '/dashboard/courses/$courseId/upload': {
      id: '/dashboard/courses/$courseId/upload'
      path: '/upload'
      fullPath: '/dashboard/courses/$courseId/upload'
      preLoaderRoute: typeof DashboardCoursesCourseIdUploadImport
      parentRoute: typeof DashboardCoursesCourseIdImport
    }
    '/dashboard/notes/$noteId/edit': {
      id: '/dashboard/notes/$noteId/edit'
      path: '/edit'
      fullPath: '/dashboard/notes/$noteId/edit'
      preLoaderRoute: typeof DashboardNotesNoteIdEditImport
      parentRoute: typeof DashboardNotesNoteIdImport
    }
    '/dashboard/courses/$courseId/': {
      id: '/dashboard/courses/$courseId/'
      path: '/'
      fullPath: '/dashboard/courses/$courseId/'
      preLoaderRoute: typeof DashboardCoursesCourseIdIndexImport
      parentRoute: typeof DashboardCoursesCourseIdImport
    }
    '/dashboard/notes/$noteId/': {
      id: '/dashboard/notes/$noteId/'
      path: '/'
      fullPath: '/dashboard/notes/$noteId/'
      preLoaderRoute: typeof DashboardNotesNoteIdIndexImport
      parentRoute: typeof DashboardNotesNoteIdImport
    }
  }
}

// Create and export the route tree

interface DashboardCoursesCourseIdRouteChildren {
  DashboardCoursesCourseIdEditRoute: typeof DashboardCoursesCourseIdEditRoute
  DashboardCoursesCourseIdUploadRoute: typeof DashboardCoursesCourseIdUploadRoute
  DashboardCoursesCourseIdIndexRoute: typeof DashboardCoursesCourseIdIndexRoute
}

const DashboardCoursesCourseIdRouteChildren: DashboardCoursesCourseIdRouteChildren =
  {
    DashboardCoursesCourseIdEditRoute: DashboardCoursesCourseIdEditRoute,
    DashboardCoursesCourseIdUploadRoute: DashboardCoursesCourseIdUploadRoute,
    DashboardCoursesCourseIdIndexRoute: DashboardCoursesCourseIdIndexRoute,
  }

const DashboardCoursesCourseIdRouteWithChildren =
  DashboardCoursesCourseIdRoute._addFileChildren(
    DashboardCoursesCourseIdRouteChildren,
  )

interface DashboardCoursesRouteChildren {
  DashboardCoursesCourseIdRoute: typeof DashboardCoursesCourseIdRouteWithChildren
  DashboardCoursesNewRoute: typeof DashboardCoursesNewRoute
  DashboardCoursesIndexRoute: typeof DashboardCoursesIndexRoute
}

const DashboardCoursesRouteChildren: DashboardCoursesRouteChildren = {
  DashboardCoursesCourseIdRoute: DashboardCoursesCourseIdRouteWithChildren,
  DashboardCoursesNewRoute: DashboardCoursesNewRoute,
  DashboardCoursesIndexRoute: DashboardCoursesIndexRoute,
}

const DashboardCoursesRouteWithChildren =
  DashboardCoursesRoute._addFileChildren(DashboardCoursesRouteChildren)

interface DashboardFilesRouteChildren {
  DashboardFilesIndexRoute: typeof DashboardFilesIndexRoute
}

const DashboardFilesRouteChildren: DashboardFilesRouteChildren = {
  DashboardFilesIndexRoute: DashboardFilesIndexRoute,
}

const DashboardFilesRouteWithChildren = DashboardFilesRoute._addFileChildren(
  DashboardFilesRouteChildren,
)

interface DashboardNotesNoteIdRouteChildren {
  DashboardNotesNoteIdEditRoute: typeof DashboardNotesNoteIdEditRoute
  DashboardNotesNoteIdIndexRoute: typeof DashboardNotesNoteIdIndexRoute
}

const DashboardNotesNoteIdRouteChildren: DashboardNotesNoteIdRouteChildren = {
  DashboardNotesNoteIdEditRoute: DashboardNotesNoteIdEditRoute,
  DashboardNotesNoteIdIndexRoute: DashboardNotesNoteIdIndexRoute,
}

const DashboardNotesNoteIdRouteWithChildren =
  DashboardNotesNoteIdRoute._addFileChildren(DashboardNotesNoteIdRouteChildren)

interface DashboardNotesRouteChildren {
  DashboardNotesNoteIdRoute: typeof DashboardNotesNoteIdRouteWithChildren
  DashboardNotesNewRoute: typeof DashboardNotesNewRoute
  DashboardNotesIndexRoute: typeof DashboardNotesIndexRoute
}

const DashboardNotesRouteChildren: DashboardNotesRouteChildren = {
  DashboardNotesNoteIdRoute: DashboardNotesNoteIdRouteWithChildren,
  DashboardNotesNewRoute: DashboardNotesNewRoute,
  DashboardNotesIndexRoute: DashboardNotesIndexRoute,
}

const DashboardNotesRouteWithChildren = DashboardNotesRoute._addFileChildren(
  DashboardNotesRouteChildren,
)

interface DashboardRouteChildren {
  DashboardCoursesRoute: typeof DashboardCoursesRouteWithChildren
  DashboardFilesRoute: typeof DashboardFilesRouteWithChildren
  DashboardNotesRoute: typeof DashboardNotesRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardLecturesSummarizationIdRoute: typeof DashboardLecturesSummarizationIdRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardCoursesRoute: DashboardCoursesRouteWithChildren,
  DashboardFilesRoute: DashboardFilesRouteWithChildren,
  DashboardNotesRoute: DashboardNotesRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardLecturesSummarizationIdRoute: DashboardLecturesSummarizationIdRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/dashboard/courses': typeof DashboardCoursesRouteWithChildren
  '/dashboard/files': typeof DashboardFilesRouteWithChildren
  '/dashboard/notes': typeof DashboardNotesRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/courses/$courseId': typeof DashboardCoursesCourseIdRouteWithChildren
  '/dashboard/courses/new': typeof DashboardCoursesNewRoute
  '/dashboard/lectures/$summarizationId': typeof DashboardLecturesSummarizationIdRoute
  '/dashboard/notes/$noteId': typeof DashboardNotesNoteIdRouteWithChildren
  '/dashboard/notes/new': typeof DashboardNotesNewRoute
  '/dashboard/courses/': typeof DashboardCoursesIndexRoute
  '/dashboard/files/': typeof DashboardFilesIndexRoute
  '/dashboard/notes/': typeof DashboardNotesIndexRoute
  '/dashboard/courses/$courseId/edit': typeof DashboardCoursesCourseIdEditRoute
  '/dashboard/courses/$courseId/upload': typeof DashboardCoursesCourseIdUploadRoute
  '/dashboard/notes/$noteId/edit': typeof DashboardNotesNoteIdEditRoute
  '/dashboard/courses/$courseId/': typeof DashboardCoursesCourseIdIndexRoute
  '/dashboard/notes/$noteId/': typeof DashboardNotesNoteIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/courses/new': typeof DashboardCoursesNewRoute
  '/dashboard/lectures/$summarizationId': typeof DashboardLecturesSummarizationIdRoute
  '/dashboard/notes/new': typeof DashboardNotesNewRoute
  '/dashboard/courses': typeof DashboardCoursesIndexRoute
  '/dashboard/files': typeof DashboardFilesIndexRoute
  '/dashboard/notes': typeof DashboardNotesIndexRoute
  '/dashboard/courses/$courseId/edit': typeof DashboardCoursesCourseIdEditRoute
  '/dashboard/courses/$courseId/upload': typeof DashboardCoursesCourseIdUploadRoute
  '/dashboard/notes/$noteId/edit': typeof DashboardNotesNoteIdEditRoute
  '/dashboard/courses/$courseId': typeof DashboardCoursesCourseIdIndexRoute
  '/dashboard/notes/$noteId': typeof DashboardNotesNoteIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/dashboard/courses': typeof DashboardCoursesRouteWithChildren
  '/dashboard/files': typeof DashboardFilesRouteWithChildren
  '/dashboard/notes': typeof DashboardNotesRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/courses/$courseId': typeof DashboardCoursesCourseIdRouteWithChildren
  '/dashboard/courses/new': typeof DashboardCoursesNewRoute
  '/dashboard/lectures/$summarizationId': typeof DashboardLecturesSummarizationIdRoute
  '/dashboard/notes/$noteId': typeof DashboardNotesNoteIdRouteWithChildren
  '/dashboard/notes/new': typeof DashboardNotesNewRoute
  '/dashboard/courses/': typeof DashboardCoursesIndexRoute
  '/dashboard/files/': typeof DashboardFilesIndexRoute
  '/dashboard/notes/': typeof DashboardNotesIndexRoute
  '/dashboard/courses/$courseId/edit': typeof DashboardCoursesCourseIdEditRoute
  '/dashboard/courses/$courseId/upload': typeof DashboardCoursesCourseIdUploadRoute
  '/dashboard/notes/$noteId/edit': typeof DashboardNotesNoteIdEditRoute
  '/dashboard/courses/$courseId/': typeof DashboardCoursesCourseIdIndexRoute
  '/dashboard/notes/$noteId/': typeof DashboardNotesNoteIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/register'
    | '/dashboard/courses'
    | '/dashboard/files'
    | '/dashboard/notes'
    | '/dashboard/'
    | '/dashboard/courses/$courseId'
    | '/dashboard/courses/new'
    | '/dashboard/lectures/$summarizationId'
    | '/dashboard/notes/$noteId'
    | '/dashboard/notes/new'
    | '/dashboard/courses/'
    | '/dashboard/files/'
    | '/dashboard/notes/'
    | '/dashboard/courses/$courseId/edit'
    | '/dashboard/courses/$courseId/upload'
    | '/dashboard/notes/$noteId/edit'
    | '/dashboard/courses/$courseId/'
    | '/dashboard/notes/$noteId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/dashboard/courses/new'
    | '/dashboard/lectures/$summarizationId'
    | '/dashboard/notes/new'
    | '/dashboard/courses'
    | '/dashboard/files'
    | '/dashboard/notes'
    | '/dashboard/courses/$courseId/edit'
    | '/dashboard/courses/$courseId/upload'
    | '/dashboard/notes/$noteId/edit'
    | '/dashboard/courses/$courseId'
    | '/dashboard/notes/$noteId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/dashboard/courses'
    | '/dashboard/files'
    | '/dashboard/notes'
    | '/dashboard/'
    | '/dashboard/courses/$courseId'
    | '/dashboard/courses/new'
    | '/dashboard/lectures/$summarizationId'
    | '/dashboard/notes/$noteId'
    | '/dashboard/notes/new'
    | '/dashboard/courses/'
    | '/dashboard/files/'
    | '/dashboard/notes/'
    | '/dashboard/courses/$courseId/edit'
    | '/dashboard/courses/$courseId/upload'
    | '/dashboard/notes/$noteId/edit'
    | '/dashboard/courses/$courseId/'
    | '/dashboard/notes/$noteId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/courses",
        "/dashboard/files",
        "/dashboard/notes",
        "/dashboard/",
        "/dashboard/lectures/$summarizationId"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/dashboard/courses": {
      "filePath": "dashboard/courses.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/courses/$courseId",
        "/dashboard/courses/new",
        "/dashboard/courses/"
      ]
    },
    "/dashboard/files": {
      "filePath": "dashboard/files.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/files/"
      ]
    },
    "/dashboard/notes": {
      "filePath": "dashboard/notes.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/notes/$noteId",
        "/dashboard/notes/new",
        "/dashboard/notes/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/courses/$courseId": {
      "filePath": "dashboard/courses/$courseId.tsx",
      "parent": "/dashboard/courses",
      "children": [
        "/dashboard/courses/$courseId/edit",
        "/dashboard/courses/$courseId/upload",
        "/dashboard/courses/$courseId/"
      ]
    },
    "/dashboard/courses/new": {
      "filePath": "dashboard/courses/new.tsx",
      "parent": "/dashboard/courses"
    },
    "/dashboard/lectures/$summarizationId": {
      "filePath": "dashboard/lectures/$summarizationId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/notes/$noteId": {
      "filePath": "dashboard/notes/$noteId.tsx",
      "parent": "/dashboard/notes",
      "children": [
        "/dashboard/notes/$noteId/edit",
        "/dashboard/notes/$noteId/"
      ]
    },
    "/dashboard/notes/new": {
      "filePath": "dashboard/notes/new.tsx",
      "parent": "/dashboard/notes"
    },
    "/dashboard/courses/": {
      "filePath": "dashboard/courses/index.tsx",
      "parent": "/dashboard/courses"
    },
    "/dashboard/files/": {
      "filePath": "dashboard/files/index.tsx",
      "parent": "/dashboard/files"
    },
    "/dashboard/notes/": {
      "filePath": "dashboard/notes/index.tsx",
      "parent": "/dashboard/notes"
    },
    "/dashboard/courses/$courseId/edit": {
      "filePath": "dashboard/courses/$courseId/edit.tsx",
      "parent": "/dashboard/courses/$courseId"
    },
    "/dashboard/courses/$courseId/upload": {
      "filePath": "dashboard/courses/$courseId/upload.tsx",
      "parent": "/dashboard/courses/$courseId"
    },
    "/dashboard/notes/$noteId/edit": {
      "filePath": "dashboard/notes/$noteId/edit.tsx",
      "parent": "/dashboard/notes/$noteId"
    },
    "/dashboard/courses/$courseId/": {
      "filePath": "dashboard/courses/$courseId/index.tsx",
      "parent": "/dashboard/courses/$courseId"
    },
    "/dashboard/notes/$noteId/": {
      "filePath": "dashboard/notes/$noteId/index.tsx",
      "parent": "/dashboard/notes/$noteId"
    }
  }
}
ROUTE_MANIFEST_END */
